workflows:
  react-native-android:
    name: Email APK Delivery
    max_build_duration: 120
    instance_type: mac_mini_m1
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
    environment:
      groups:
        - env
      node: 18
      java: 17
    scripts:
      - name: Setup and build
        script: |
          npm cache clean --force
          npm install
          npm install -g @expo/cli@latest
          
          cat > app.json << 'EOF'
          {
            "expo": {
              "name": "UntoldApp",
              "slug": "untold-app",
              "version": "1.0.0",
              "android": {
                "package": "com.untold.shareapp",
                "versionCode": 1
              },
              "plugins": []
            }
          }
          EOF
          
          cat > App.tsx << 'EOF'
          import React from 'react';
          import { Text, View, StyleSheet } from 'react-native';
          
          export default function App() {
            return (
              <View style={styles.container}>
                <Text style={styles.text}>Welcome to Untold App!</Text>
              </View>
            );
          }
          
          const styles = StyleSheet.create({
            container: {
              flex: 1,
              justifyContent: 'center',
              alignItems: 'center',
              backgroundColor: '#fff',
            },
            text: {
              fontSize: 18,
              fontWeight: 'bold',
            },
          });
          EOF
          
          rm -rf app/ android ios .expo
      
      - name: Build and upload APK
        script: |
          npx expo prebuild --platform android --clean --no-install
          
          cd android
          cat > gradle.properties << 'EOF'
          org.gradle.jvmargs=-Xmx4096m
          android.useAndroidX=true
          android.enableJetifier=true
          kotlin.version=1.8.22
          EOF
          
          chmod +x ./gradlew
          ./gradlew clean
          ./gradlew assembleDebug --stacktrace
          
          echo "=== Finding and uploading APK ==="
          APK_FILE=$(find . -name "*.apk" -type f | head -1)
          if [ -n "$APK_FILE" ]; then
            echo "Found APK: $APK_FILE"
            
            # Upload to a temporary file sharing service
            curl -F "file=@$APK_FILE" https://file.io | tee upload_result.txt
            
            echo "=== APK uploaded successfully ==="
            cat upload_result.txt
          else
            echo "No APK file found!"
            find . -name "*.apk" -type f
          fi
    
    artifacts:
      - "**/*.apk"
      - upload_result.txt
    
    publishing:
      email:
        recipients:
          - skbad911@gmail.com
        notify:
          success: true
          failure: true