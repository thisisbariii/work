workflows:
  react-native-android:
    name: Signed Release APK
    max_build_duration: 60
    instance_type: mac_mini_m1
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
    environment:
      groups:
        - env
      node: 18
      java: 17
    scripts:
      - name: Build Signed Release APK
        script: |
          npm install -g @expo/cli@latest
          
          cat > package.json << 'EOF'
          {
            "name": "untold",
            "version": "1.0.0",
            "main": "App.js",
            "dependencies": {
              "expo": "~51.0.28",
              "react": "18.2.0",
              "react-native": "0.74.5"
            }
          }
          EOF
          
          cat > App.js << 'EOF'
          import React from 'react';
          import { Text, View, StyleSheet, TouchableOpacity, Alert } from 'react-native';
          
          export default function App() {
            const showAlert = () => {
              Alert.alert('Welcome!', 'Untold App is working perfectly!');
            };
            
            return (
              <View style={styles.container}>
                <Text style={styles.title}>🎉 Untold App 🎉</Text>
                <Text style={styles.subtitle}>Share & Heal</Text>
                <TouchableOpacity style={styles.button} onPress={showAlert}>
                  <Text style={styles.buttonText}>Test App</Text>
                </TouchableOpacity>
              </View>
            );
          }
          
          const styles = StyleSheet.create({
            container: {
              flex: 1,
              justifyContent: 'center',
              alignItems: 'center',
              backgroundColor: '#667eea',
            },
            title: {
              fontSize: 28,
              color: 'white',
              fontWeight: 'bold',
              marginBottom: 10,
            },
            subtitle: {
              fontSize: 18,
              color: 'white',
              marginBottom: 30,
            },
            button: {
              backgroundColor: 'white',
              paddingHorizontal: 30,
              paddingVertical: 15,
              borderRadius: 25,
            },
            buttonText: {
              color: '#667eea',
              fontSize: 16,
              fontWeight: 'bold',
            },
          });
          EOF
          
          cat > app.json << 'EOF'
          {
            "expo": {
              "name": "Untold App",
              "slug": "untold-app",
              "version": "1.0.0",
              "android": {
                "package": "com.untold.shareapp",
                "versionCode": 1
              }
            }
          }
          EOF
          
          npm install
          npx expo prebuild --platform android --clean
          
          cd android
          chmod +x gradlew
          
          cat > gradle.properties << 'EOF'
          org.gradle.jvmargs=-Xmx4096m
          android.useAndroidX=true
          android.enableJetifier=true
          hermesEnabled=true
          EOF
          
          # Fix hermesEnabled error
          sed -i 's/hermesEnabled/project.findProperty("hermesEnabled") ?: true/g' app/build.gradle
          
          # Add all required resources
          mkdir -p app/src/main/res/values
          mkdir -p app/src/main/res/drawable
          
          cat > app/src/main/res/values/colors.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <color name="splashscreen_background">#667eea</color>
              <color name="colorPrimary">#667eea</color>
              <color name="colorPrimaryDark">#5a6fd8</color>
              <color name="colorAccent">#667eea</color>
          </resources>
          EOF
          
          cat > app/src/main/res/drawable/splashscreen.xml << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
              <item android:drawable="@color/splashscreen_background" />
          </layer-list>
          EOF
          
          # Build release APK (properly signed)
          ./gradlew assembleRelease
          
          # Find and copy APK
          APK=$(find . -name "*release*.apk" | head -1)
          if [ -n "$APK" ]; then
            cp "$APK" ../UntoldApp-Release.apk
            echo "✅ Release APK created: UntoldApp-Release.apk"
            ls -lh ../UntoldApp-Release.apk
            
            # Try file.io for upload
            echo "📤 Uploading to file.io..."
            UPLOAD_RESULT=$(curl -F "file=@../UntoldApp-Release.apk" https://file.io)
            echo "Upload result: $UPLOAD_RESULT"
            
            # Extract download link
            DOWNLOAD_LINK=$(echo "$UPLOAD_RESULT" | grep -o '"link":"[^"]*"' | cut -d'"' -f4)
            
            # Create success file
            cat > ../DOWNLOAD_INFO.txt << EOF
          🎉 UNTOLD APP - RELEASE APK READY! 🎉
          
          📱 File: UntoldApp-Release.apk
          📊 Size: $(ls -lh ../UntoldApp-Release.apk | awk '{print $5}')
          📅 Built: $(date)
          
          📥 DOWNLOAD LINK:
          $DOWNLOAD_LINK
          
          📱 INSTALLATION:
          1. Download the APK
          2. Enable "Install from unknown sources" in Android settings
          3. Install the APK
          4. Launch Untold App!
          
          🚀 READY TO USE! 🚀
          EOF
            
            echo "=============================================="
            cat ../DOWNLOAD_INFO.txt
            echo "=============================================="
            
          else
            echo "❌ No release APK found"
            find . -name "*.apk" -type f
          fi
    
    artifacts:
      - UntoldApp-Release.apk
      - DOWNLOAD_INFO.txt
    
    publishing:
      email:
        recipients:
          - skbad911@gmail.com
        notify:
          success: true
          failure: true