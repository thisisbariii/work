workflows:
  react-native-android:
    name: React Native EAS Build
    max_build_duration: 120
    instance_type: mac_mini_m1
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
    environment:
      groups:
        - env
      node: 18
      java: 17
      vars:
        EXPO_TOKEN: # You need to add your Expo token in CodeMagic environment variables
    scripts:
      - name: Setup Expo Project
        script: |
          npm install -g @expo/cli@latest eas-cli@latest
          
          # Create proper React Native Expo project
          cat > package.json << 'EOF'
          {
            "name": "untold-app",
            "version": "1.0.0",
            "main": "node_modules/expo/AppEntry.js",
            "scripts": {
              "start": "expo start",
              "android": "expo start --android",
              "ios": "expo start --ios",
              "web": "expo start --web"
            },
            "dependencies": {
              "expo": "~51.0.28",
              "react": "18.2.0",
              "react-native": "0.74.5",
              "expo-status-bar": "~1.12.1"
            },
            "devDependencies": {
              "@babel/core": "^7.20.0"
            }
          }
          EOF
          
          # Create proper React Native app
          cat > App.js << 'EOF'
          import React from 'react';
          import { StatusBar } from 'expo-status-bar';
          import { StyleSheet, Text, View, TouchableOpacity, Alert } from 'react-native';
          
          export default function App() {
            const showMessage = () => {
              Alert.alert(
                "Welcome to Untold!",
                "Your React Native app is working perfectly! 🎉",
                [{ text: "Awesome!", style: "default" }]
              );
            };
          
            return (
              <View style={styles.container}>
                <StatusBar style="light" />
                <Text style={styles.title}>🎉 Untold App 🎉</Text>
                <Text style={styles.subtitle}>Share & Heal</Text>
                <Text style={styles.description}>Built with React Native & Expo</Text>
                
                <TouchableOpacity style={styles.button} onPress={showMessage}>
                  <Text style={styles.buttonText}>Test App</Text>
                </TouchableOpacity>
                
                <Text style={styles.footer}>v1.0.0 - React Native</Text>
              </View>
            );
          }
          
          const styles = StyleSheet.create({
            container: {
              flex: 1,
              backgroundColor: '#667eea',
              alignItems: 'center',
              justifyContent: 'center',
              padding: 20,
            },
            title: {
              fontSize: 32,
              fontWeight: 'bold',
              color: 'white',
              textAlign: 'center',
              marginBottom: 10,
            },
            subtitle: {
              fontSize: 20,
              color: 'white',
              textAlign: 'center',
              marginBottom: 10,
            },
            description: {
              fontSize: 16,
              color: 'rgba(255,255,255,0.8)',
              textAlign: 'center',
              marginBottom: 30,
            },
            button: {
              backgroundColor: 'white',
              paddingHorizontal: 30,
              paddingVertical: 15,
              borderRadius: 25,
              marginBottom: 20,
              elevation: 3,
              shadowColor: '#000',
              shadowOffset: { width: 0, height: 2 },
              shadowOpacity: 0.25,
              shadowRadius: 3.84,
            },
            buttonText: {
              color: '#667eea',
              fontSize: 18,
              fontWeight: 'bold',
            },
            footer: {
              fontSize: 12,
              color: 'rgba(255,255,255,0.7)',
              textAlign: 'center',
              marginTop: 20,
            },
          });
          EOF
          
          # Create proper app.json
          cat > app.json << 'EOF'
          {
            "expo": {
              "name": "Untold App",
              "slug": "untold-app",
              "version": "1.0.0",
              "orientation": "portrait",
              "icon": "./assets/icon.png",
              "userInterfaceStyle": "light",
              "splash": {
                "image": "./assets/splash.png",
                "resizeMode": "contain",
                "backgroundColor": "#667eea"
              },
              "assetBundlePatterns": [
                "**/*"
              ],
              "ios": {
                "supportsTablet": true
              },
              "android": {
                "package": "com.untold.shareapp",
                "versionCode": 1,
                "adaptiveIcon": {
                  "foregroundImage": "./assets/adaptive-icon.png",
                  "backgroundColor": "#667eea"
                }
              },
              "web": {
                "favicon": "./assets/favicon.png"
              },
              "extra": {
                "eas": {
                  "projectId": "your-project-id"
                }
              }
            }
          }
          EOF
          
          # Create EAS configuration
          cat > eas.json << 'EOF'
          {
            "cli": {
              "version": ">= 12.0.0"
            },
            "build": {
              "development": {
                "developmentClient": true,
                "distribution": "internal"
              },
              "preview": {
                "distribution": "internal",
                "android": {
                  "buildType": "apk"
                }
              },
              "production": {
                "android": {
                  "buildType": "apk"
                }
              }
            }
          }
          EOF
          
          # Create placeholder assets
          mkdir -p assets
          echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNk+M9QDwADhgGAWjR9awAAAABJRU5ErkJggg==" | base64 -d > assets/icon.png
          cp assets/icon.png assets/splash.png
          cp assets/icon.png assets/adaptive-icon.png
          cp assets/icon.png assets/favicon.png
          
          npm install
      
      - name: Build with EAS
        script: |
          echo "Building React Native APK with EAS..."
          
          # Configure EAS
          eas project:init --id your-project-id --non-interactive || echo "Project already configured"
          
          # Build APK
          eas build --platform android --profile preview --non-interactive --wait --local
          
          # Find the built APK
          APK=$(find . -name "*.apk" | head -1)
          if [ -n "$APK" ]; then
            cp "$APK" UntoldApp-ReactNative.apk
            echo "✅ React Native APK built successfully!"
            ls -lh UntoldApp-ReactNative.apk
            
            # Upload
            UPLOAD_RESULT=$(curl -F "file=@UntoldApp-ReactNative.apk" https://file.io)
            DOWNLOAD_LINK=$(echo "$UPLOAD_RESULT" | grep -o '"link":"[^"]*"' | cut -d'"' -f4)
            
            cat > REACT_NATIVE_SUCCESS.txt << EOF
          🎉 REACT NATIVE APK READY! 🎉
          
          📱 File: UntoldApp-ReactNative.apk
          📊 Size: $(ls -lh UntoldApp-ReactNative.apk | awk '{print $5}')
          ⚛️ Technology: React Native + Expo
          🔧 Built with: EAS Build (Professional)
          
          📥 DOWNLOAD:
          $DOWNLOAD_LINK
          
          ✅ This is a proper React Native app that will work!
          EOF
            
            echo "=============================================="
            cat REACT_NATIVE_SUCCESS.txt
            echo "=============================================="
            
          else
            echo "❌ EAS build failed"
          fi
    
    artifacts:
      - UntoldApp-ReactNative.apk
      - REACT_NATIVE_SUCCESS.txt
    
    publishing:
      email:
        recipients:
          - skbad911@gmail.com
        notify:
          success: true
          failure: true