workflows:
  react-native-android:
    name: Working APK Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: main
          include: true
          source: true
    environment:
      groups:
        - env
      node: 18
      java: 17
    scripts:
      - name: Build Working APK
        script: |
          # Use React Native CLI instead of Expo
          npm install -g react-native-cli
          
          # Create React Native project
          npx react-native@latest init UntoldApp
          cd UntoldApp
          
          # Replace App.tsx with working code
          cat > App.tsx << 'EOF'
          import React from 'react';
          import {SafeAreaView, Text, View, StyleSheet} from 'react-native';
          
          function App(): React.JSX.Element {
            return (
              <SafeAreaView style={styles.container}>
                <View style={styles.content}>
                  <Text style={styles.title}>🎉 Untold App 🎉</Text>
                  <Text style={styles.subtitle}>Share & Heal</Text>
                  <Text style={styles.version}>v1.0.0</Text>
                </View>
              </SafeAreaView>
            );
          }
          
          const styles = StyleSheet.create({
            container: {
              flex: 1,
              backgroundColor: '#667eea',
            },
            content: {
              flex: 1,
              justifyContent: 'center',
              alignItems: 'center',
            },
            title: {
              fontSize: 28,
              fontWeight: 'bold',
              color: 'white',
              marginBottom: 10,
            },
            subtitle: {
              fontSize: 18,
              color: 'white',
              marginBottom: 5,
            },
            version: {
              fontSize: 14,
              color: 'rgba(255,255,255,0.8)',
              marginTop: 20,
            },
          });
          
          export default App;
          EOF
          
          # Update package name
          sed -i 's/com.untoldapp/com.untold.shareapp/g' android/app/src/main/java/com/untoldapp/MainActivity.kt
          sed -i 's/com.untoldapp/com.untold.shareapp/g' android/app/src/main/java/com/untoldapp/MainApplication.kt
          sed -i 's/UntoldApp/Untold App/g' android/app/src/main/res/values/strings.xml
          
          # Fix Android config
          cd android
          
          cat >> gradle.properties << 'EOF'
          
          # Fix build issues
          org.gradle.jvmargs=-Xmx4096m
          android.useAndroidX=true
          android.enableJetifier=true
          newArchEnabled=false
          hermesEnabled=true
          EOF
          
          # Build release APK
          chmod +x ./gradlew
          ./gradlew clean
          ./gradlew assembleRelease
          
          # Find and upload APK
          APK=$(find . -name "*.apk" | grep release | head -1)
          if [ -n "$APK" ]; then
            cp "$APK" ../UntoldApp.apk
            echo "✅ APK built successfully: UntoldApp.apk"
            ls -lh ../UntoldApp.apk
            
            # Upload to file.io
            cd ..
            UPLOAD_RESULT=$(curl -F "file=@UntoldApp.apk" https://file.io)
            DOWNLOAD_LINK=$(echo "$UPLOAD_RESULT" | grep -o '"link":"[^"]*"' | cut -d'"' -f4)
            
            echo "📥 DOWNLOAD LINK: $DOWNLOAD_LINK"
            
            cat > SUCCESS.txt << EOF
          🎉 UNTOLD APP APK READY! 🎉
          
          📱 Download: $DOWNLOAD_LINK
          📊 Size: $(ls -lh UntoldApp.apk | awk '{print $5}')
          
          🚀 THIS WILL WORK! 🚀
          EOF
            
            cat SUCCESS.txt
            
          else
            echo "❌ Build failed"
            find android -name "*.apk" -type f
          fi
    
    artifacts:
      - UntoldApp.apk
      - SUCCESS.txt
    
    publishing:
      email:
        recipients:
          - skbad911@gmail.com
        notify:
          success: true
          failure: true